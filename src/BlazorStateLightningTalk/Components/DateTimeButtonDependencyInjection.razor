@implements IDisposable
@inject AppStateDependencyInjection AppStateDependencyInjection

<div class=@($"datetime-button-container component-rendered-{(_renderIndicator ? "true" : "false")}")>
    <h3>@AppStateDependencyInjection.Date.ToString("yyyy-MM-dd hh:mm:ss")</h3>
    <button @onclick="@AppStateDependencyInjection.UpdateDate"
            @onclick:stopPropagation="true"
            @onclick:preventDefault="true"
            @ontouchstart:stopPropagation="true"
            @ontouchstart:preventDefault="true"
    >
        Update DateTime
    </button>
</div>

@code {

    protected override Task OnInitializedAsync()
    {
        AppStateDependencyInjection.OnChange += StateHasChanged;
        return base.OnInitializedAsync();
    }

    public void Dispose()
    {
        AppStateDependencyInjection.OnChange -= StateHasChanged;
    }

    private bool _renderIndicator = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _renderIndicator = !_renderIndicator;
        await base.OnAfterRenderAsync(firstRender);
    }

}
