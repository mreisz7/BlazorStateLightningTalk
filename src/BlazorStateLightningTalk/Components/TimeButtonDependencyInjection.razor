@implements IDisposable
@inject AppStateDependencyInjection AppState

<div class=@($"datetime-button-container component-rendered-{(_renderIndicator ? "true" : "false")}")>
    <h3>@AppState.Time.ToString("hh:mm:ss.fff")</h3>
    <button @onclick="@AppState.UpdateTime"
            @onclick:stopPropagation="true"
            @onclick:preventDefault="true"
            @ontouchstart:stopPropagation="true"
            @ontouchstart:preventDefault="true"
    >
        Update
    </button>
</div>

@code {

    protected override void OnInitialized()
    {
        AppState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }

    private bool _renderIndicator = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _renderIndicator = !_renderIndicator;
        await base.OnAfterRenderAsync(firstRender);
    }

}
